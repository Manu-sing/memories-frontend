{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport idReducer from \"./reducers/idReducer\";\nimport authReducer from \"./reducers/auth\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, {\n  posts: postReducer,\n  currentId: idReducer,\n  auth: authReducer\n}); // const store = configureStore({\n//   reducer: {\n//     posts: postReducer,\n//     currentId: idReducer,\n//     auth: authReducer,\n//   },\n// });\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","postReducer","idReducer","authReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","persistedReducer","posts","currentId","auth","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport idReducer from \"./reducers/idReducer\";\nimport authReducer from \"./reducers/auth\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, {\n  posts: postReducer,\n  currentId: idReducer,\n  auth: authReducer,\n});\n\n// const store = configureStore({\n//   reducer: {\n//     posts: postReducer,\n//     currentId: idReducer,\n//     auth: authReducer,\n//   },\n// });\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAE,CAFW;EAGpBH;AAHoB,CAAtB;AAMA,MAAMI,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgB;EACrDI,KAAK,EAAEhB,WAD8C;EAErDiB,SAAS,EAAEhB,SAF0C;EAGrDiB,IAAI,EAAEhB;AAH+C,CAAhB,CAAvC,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMiB,KAAK,GAAGpB,cAAc,CAAC;EAClCqB,OAAO,EAAEL,gBADyB;EAElCM,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD;AAHY,CAAD,CAA5B;AAUP,OAAO,MAAMe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}