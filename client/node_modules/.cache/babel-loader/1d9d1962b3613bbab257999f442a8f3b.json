{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport loginService from \"../services/signin\";\nimport signupService from \"../services/signup\";\nimport postService from \"../services/posts\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    authData: null\n  },\n  reducers: {\n    setAuth(state, action) {\n      localStorage.setItem(\"profile\", JSON.stringify({ ...(action === null || action === void 0 ? void 0 : action.payload)\n      }));\n      return { ...state,\n        authData: action === null || action === void 0 ? void 0 : action.payload\n      };\n    },\n\n    logOut(state, action) {\n      localStorage.clear();\n      return { ...state,\n        authData: null\n      };\n    }\n\n  }\n});\nexport const {\n  setAuth,\n  logOut\n} = authSlice.actions;\nexport const signin = (setMessage, setTypeOfMessage, formData, navigate) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login(formData);\n      postService.setToken(user.token);\n      dispatch(setAuth({\n        name: user.result.name,\n        email: user.result.email,\n        token: user.token\n      }));\n      navigate(\"/\");\n      setTypeOfMessage(\"success\");\n      setMessage(`Welcome ${user.result.name}`);\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 6000);\n    } catch (error) {\n      setTypeOfMessage(\"error\");\n      setMessage(\"Login was unsuccessful. Try again.\");\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 6000);\n      console.log(error);\n    }\n  };\n};\nexport const signup = (setMessage, setTypeOfMessage, formData, navigate) => {\n  return async dispatch => {\n    try {\n      const user = await signupService.registration(formData);\n      postService.setToken(user.token);\n      dispatch(setAuth({\n        name: user.result.name,\n        email: user.result.email,\n        token: user.token\n      }));\n      navigate(\"/\");\n      setTypeOfMessage(\"success\");\n      setMessage(`Welcome ${user.result.name}`);\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 10000);\n    } catch (error) {\n      setTypeOfMessage(\"error\");\n      setMessage(\"Signup was unsuccessful. Try again.\");\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 10000);\n      console.log(error);\n    }\n  };\n};\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","loginService","signupService","postService","authSlice","name","initialState","authData","reducers","setAuth","state","action","localStorage","setItem","JSON","stringify","payload","logOut","clear","actions","signin","setMessage","setTypeOfMessage","formData","navigate","dispatch","user","login","setToken","token","result","email","setTimeout","error","console","log","signup","registration","reducer"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/reducers/auth.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport loginService from \"../services/signin\";\nimport signupService from \"../services/signup\";\nimport postService from \"../services/posts\";\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: { authData: null },\n  reducers: {\n    setAuth(state, action) {\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action?.payload }));\n      return { ...state, authData: action?.payload };\n    },\n    logOut(state, action) {\n      localStorage.clear();\n      return { ...state, authData: null };\n    },\n  },\n});\n\nexport const { setAuth, logOut } = authSlice.actions;\n\nexport const signin = (setMessage, setTypeOfMessage, formData, navigate) => {\n  return async (dispatch) => {\n    try {\n      const user = await loginService.login(formData);\n      postService.setToken(user.token);\n      dispatch(\n        setAuth({\n          name: user.result.name,\n          email: user.result.email,\n          token: user.token,\n        })\n      );\n      navigate(\"/\");\n      setTypeOfMessage(\"success\");\n      setMessage(`Welcome ${user.result.name}`);\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 6000);\n    } catch (error) {\n      setTypeOfMessage(\"error\");\n      setMessage(\"Login was unsuccessful. Try again.\");\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 6000);\n      console.log(error);\n    }\n  };\n};\n\nexport const signup = (setMessage, setTypeOfMessage, formData, navigate) => {\n  return async (dispatch) => {\n    try {\n      const user = await signupService.registration(formData);\n      postService.setToken(user.token);\n      dispatch(\n        setAuth({\n          name: user.result.name,\n          email: user.result.email,\n          token: user.token,\n        })\n      );\n      navigate(\"/\");\n      setTypeOfMessage(\"success\");\n      setMessage(`Welcome ${user.result.name}`);\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 10000);\n    } catch (error) {\n      setTypeOfMessage(\"error\");\n      setMessage(\"Signup was unsuccessful. Try again.\");\n      setTimeout(() => {\n        setMessage(null);\n        setTypeOfMessage(null);\n      }, 10000);\n      console.log(error);\n    }\n  };\n};\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}