{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/posts\";\nlet user = JSON.parse(localStorage.getItem(\"profile\"));\nlet token = `bearer ${user.token}`; // take it from the local storage\n// const setToken = (newToken) => {\n//   token = `bearer ${newToken}`;\n//   console.log(token);\n// };\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newObj => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst removeThePost = async id => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  removeThePost,\n  update\n};","map":{"version":3,"names":["axios","baseUrl","user","JSON","parse","localStorage","getItem","token","getAll","response","get","data","create","newObj","console","log","config","headers","Authorization","post","update","id","newObject","put","removeThePost","delete"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/services/posts.js"],"sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/posts\";\n\nlet user = JSON.parse(localStorage.getItem(\"profile\"));\nlet token = `bearer ${user.token}`; // take it from the local storage\n\n// const setToken = (newToken) => {\n//   token = `bearer ${newToken}`;\n//   console.log(token);\n// };\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newObj) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst removeThePost = async (id) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, create, removeThePost, update };\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAX;AACA,IAAIC,KAAK,GAAI,UAASL,IAAI,CAACK,KAAM,EAAjC,C,CAAoC;AAEpC;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,YAAY;EACzB,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUT,OAAV,CAAvB;EACA,OAAOQ,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,MAAP,IAAkB;EAC/BC,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACA,MAAMS,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEX;IAAjB;EADI,CAAf;EAIA,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACmB,IAAN,CAAWlB,OAAX,EAAoBY,MAApB,EAA4BG,MAA5B,CAAvB;EACA,OAAOP,QAAQ,CAACE,IAAhB;AACD,CARD;;AAUA,MAAMS,MAAM,GAAG,OAAOC,EAAP,EAAWC,SAAX,KAAyB;EACtC,MAAMb,QAAQ,GAAG,MAAMT,KAAK,CAACuB,GAAN,CAAW,GAAEtB,OAAQ,IAAGoB,EAAG,EAA3B,EAA8BC,SAA9B,CAAvB;EACA,OAAOb,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMa,aAAa,GAAG,MAAOH,EAAP,IAAc;EAClCP,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACA,MAAMS,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEX;IAAjB;EADI,CAAf;EAGA,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACyB,MAAN,CAAc,GAAExB,OAAQ,IAAGoB,EAAG,EAA9B,EAAiCL,MAAjC,CAAvB;EACA,OAAOP,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,eAAe;EAAEH,MAAF;EAAUI,MAAV;EAAkBY,aAAlB;EAAiCJ;AAAjC,CAAf"},"metadata":{},"sourceType":"module"}