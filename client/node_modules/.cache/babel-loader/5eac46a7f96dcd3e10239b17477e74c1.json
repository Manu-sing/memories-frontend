{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/posts\"; // const setToken = async () => {\n//   let user = await JSON.parse(localStorage.getItem(\"profile\"));\n//   let token = `Bearer ${user.token}`; // take it from the local storage\n//   if (token) {\n//     return token;\n//   } else {\n//     console.log(\"token missing\");\n//   }\n// };\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newObj => {\n  const config = {\n    headers: {\n      Authorization: setToken()\n    }\n  };\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst removeThePost = async id => {\n  const config = {\n    headers: {\n      Authorization: await setToken()\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  removeThePost,\n  update\n};","map":{"version":3,"names":["axios","baseUrl","getAll","response","get","data","create","newObj","config","headers","Authorization","setToken","post","update","id","newObject","put","removeThePost","delete"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/services/posts.js"],"sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/posts\";\n\n// const setToken = async () => {\n//   let user = await JSON.parse(localStorage.getItem(\"profile\"));\n//   let token = `Bearer ${user.token}`; // take it from the local storage\n//   if (token) {\n//     return token;\n//   } else {\n//     console.log(\"token missing\");\n//   }\n// };\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newObj) => {\n  const config = {\n    headers: { Authorization: setToken() },\n  };\n\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst removeThePost = async (id) => {\n  const config = {\n    headers: { Authorization: await setToken() },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, create, removeThePost, update };\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,YAAY;EACzB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAvB;EACA,OAAOE,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,MAAP,IAAkB;EAC/B,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEC,QAAQ;IAAzB;EADI,CAAf;EAIA,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAN,CAAWX,OAAX,EAAoBM,MAApB,EAA4BC,MAA5B,CAAvB;EACA,OAAOL,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMQ,MAAM,GAAG,OAAOC,EAAP,EAAWC,SAAX,KAAyB;EACtC,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACgB,GAAN,CAAW,GAAEf,OAAQ,IAAGa,EAAG,EAA3B,EAA8BC,SAA9B,CAAvB;EACA,OAAOZ,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMY,aAAa,GAAG,MAAOH,EAAP,IAAc;EAClC,MAAMN,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAE,MAAMC,QAAQ;IAA/B;EADI,CAAf;EAGA,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACkB,MAAN,CAAc,GAAEjB,OAAQ,IAAGa,EAAG,EAA9B,EAAiCN,MAAjC,CAAvB;EACA,OAAOL,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,eAAe;EAAEH,MAAF;EAAUI,MAAV;EAAkBW,aAAlB;EAAiCJ;AAAjC,CAAf"},"metadata":{},"sourceType":"module"}