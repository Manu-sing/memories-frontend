{"ast":null,"code":"var _jsxFileName = \"/Users/emanueleguarnaccia/memories-frontend/client/src/components/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\nimport { Grid, CircularProgress } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removePost, likeAPost } from \"../../reducers/postReducer\";\nimport { setId } from \"../../reducers/idReducer\";\nimport DefaultPost from \"./Post/DefaultPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    setMessage,\n    setTypeOfMessage\n  } = _ref;\n  const posts = useSelector(state => state.posts);\n  const user = useSelector(state => state.auth.authData);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const setCurrentId = id => {\n    console.log(`I will update the post with the following current id: ${id}`);\n    dispatch(setId(id));\n  };\n\n  const deletePost = id => {\n    dispatch(removePost(setMessage, setTypeOfMessage, id));\n  };\n\n  const likeThatPost = id => {\n    const postToAddaLikeTo = posts.find(p => p._id === id);\n    const editedPost = { ...postToAddaLikeTo,\n      likeCount: postToAddaLikeTo.likeCount + 1\n    };\n    dispatch(likeAPost(setMessage, setTypeOfMessage, id, editedPost));\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(DefaultPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.mainContainer,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: posts.map(p => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: p,\n          setCurrentId: () => setCurrentId(p._id),\n          removePost: () => deletePost(p._id),\n          likeThatPost: () => likeThatPost(p._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Posts, \"1fBe4VjA7HLQaYAvnHmQ1c8l3lw=\", false, function () {\n  return [useSelector, useSelector, useStyles, useDispatch];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Post","useStyles","Grid","CircularProgress","useDispatch","useSelector","removePost","likeAPost","setId","DefaultPost","Posts","setMessage","setTypeOfMessage","posts","state","user","auth","authData","classes","dispatch","setCurrentId","id","console","log","deletePost","likeThatPost","postToAddaLikeTo","find","p","_id","editedPost","likeCount","mainContainer","map"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/components/Posts/Posts.js"],"sourcesContent":["import React from \"react\";\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\nimport { Grid, CircularProgress } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removePost, likeAPost } from \"../../reducers/postReducer\";\nimport { setId } from \"../../reducers/idReducer\";\nimport DefaultPost from \"./Post/DefaultPost\";\n\nconst Posts = ({ setMessage, setTypeOfMessage }) => {\n  const posts = useSelector((state) => state.posts);\n  const user = useSelector((state) => state.auth.authData);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const setCurrentId = (id) => {\n    console.log(`I will update the post with the following current id: ${id}`);\n    dispatch(setId(id));\n  };\n\n  const deletePost = (id) => {\n    dispatch(removePost(setMessage, setTypeOfMessage, id));\n  };\n\n  const likeThatPost = (id) => {\n    const postToAddaLikeTo = posts.find((p) => p._id === id);\n    const editedPost = {\n      ...postToAddaLikeTo,\n      likeCount: postToAddaLikeTo.likeCount + 1,\n    };\n    dispatch(likeAPost(setMessage, setTypeOfMessage, id, editedPost));\n  };\n\n  if (user === null) {\n    return <DefaultPost />;\n  } else {\n    return (\n      <Grid\n        className={classes.mainContainer}\n        container\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        {posts.map((p) => (\n          <Grid item key={p._id} xs={12} sm={6}>\n            <Post\n              post={p}\n              setCurrentId={() => setCurrentId(p._id)}\n              removePost={() => deletePost(p._id)}\n              likeThatPost={() => likeThatPost(p._id)}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n};\n\nexport default Posts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,eAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,4BAAtC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;AAEA,MAAMC,KAAK,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAAEC,UAAF;IAAcC;EAAd,CAAqC;EAClD,MAAMC,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;EACA,MAAME,IAAI,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACE,IAAN,CAAWC,QAAvB,CAAxB;EACA,MAAMC,OAAO,GAAGjB,SAAS,EAAzB;EACA,MAAMkB,QAAQ,GAAGf,WAAW,EAA5B;;EAEA,MAAMgB,YAAY,GAAIC,EAAD,IAAQ;IAC3BC,OAAO,CAACC,GAAR,CAAa,yDAAwDF,EAAG,EAAxE;IACAF,QAAQ,CAACX,KAAK,CAACa,EAAD,CAAN,CAAR;EACD,CAHD;;EAKA,MAAMG,UAAU,GAAIH,EAAD,IAAQ;IACzBF,QAAQ,CAACb,UAAU,CAACK,UAAD,EAAaC,gBAAb,EAA+BS,EAA/B,CAAX,CAAR;EACD,CAFD;;EAIA,MAAMI,YAAY,GAAIJ,EAAD,IAAQ;IAC3B,MAAMK,gBAAgB,GAAGb,KAAK,CAACc,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUR,EAA5B,CAAzB;IACA,MAAMS,UAAU,GAAG,EACjB,GAAGJ,gBADc;MAEjBK,SAAS,EAAEL,gBAAgB,CAACK,SAAjB,GAA6B;IAFvB,CAAnB;IAIAZ,QAAQ,CAACZ,SAAS,CAACI,UAAD,EAAaC,gBAAb,EAA+BS,EAA/B,EAAmCS,UAAnC,CAAV,CAAR;EACD,CAPD;;EASA,IAAIf,IAAI,KAAK,IAAb,EAAmB;IACjB,oBAAO,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO;IACL,oBACE,QAAC,IAAD;MACE,SAAS,EAAEG,OAAO,CAACc,aADrB;MAEE,SAAS,MAFX;MAGE,UAAU,EAAC,SAHb;MAIE,OAAO,EAAE,CAJX;MAAA,UAMGnB,KAAK,CAACoB,GAAN,CAAWL,CAAD,iBACT,QAAC,IAAD;QAAM,IAAI,MAAV;QAAuB,EAAE,EAAE,EAA3B;QAA+B,EAAE,EAAE,CAAnC;QAAA,uBACE,QAAC,IAAD;UACE,IAAI,EAAEA,CADR;UAEE,YAAY,EAAE,MAAMR,YAAY,CAACQ,CAAC,CAACC,GAAH,CAFlC;UAGE,UAAU,EAAE,MAAML,UAAU,CAACI,CAAC,CAACC,GAAH,CAH9B;UAIE,YAAY,EAAE,MAAMJ,YAAY,CAACG,CAAC,CAACC,GAAH;QAJlC;UAAA;UAAA;UAAA;QAAA;MADF,GAAgBD,CAAC,CAACC,GAAlB;QAAA;QAAA;QAAA;MAAA,QADD;IANH;MAAA;MAAA;MAAA;IAAA,QADF;EAmBD;AACF,CA/CD;;GAAMnB,K;UACUL,W,EACDA,W,EACGJ,S,EACCG,W;;;KAJbM,K;AAiDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}