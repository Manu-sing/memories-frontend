{"ast":null,"code":"import _regeneratorRuntime from\"/Users/emanueleguarnaccia/memories-frontend/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/emanueleguarnaccia/memories-frontend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/emanueleguarnaccia/memories-frontend/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";import postService from\"../services/posts\";import{handleNotification}from\"./notificationReducer\";var postSlice=createSlice({name:\"posts\",initialState:[],reducers:{setPosts:function setPosts(state,action){return action.payload;},appendPost:function appendPost(state,action){state.push(action.payload);},detachPost:function detachPost(state,action){var id=action.payload;return state.filter(function(post){return post._id!==id;});},updateThePost:function updateThePost(state,action){return state.map(function(post){return post._id===action.payload._id?action.payload:post;});},likeIt:function likeIt(state,action){var id=action.payload;var postToLike=state.find(function(post){return post._id===id;});var likedPost=_objectSpread(_objectSpread({},postToLike),{},{likeCount:postToLike.likeCount+1});return state.map(function(post){return post._id===id?likedPost:post;});}}});var _postSlice$actions=postSlice.actions,setPosts=_postSlice$actions.setPosts,appendPost=_postSlice$actions.appendPost,detachPost=_postSlice$actions.detachPost,updateThePost=_postSlice$actions.updateThePost,likeIt=_postSlice$actions.likeIt;export{setPosts,appendPost,detachPost,updateThePost,likeIt};export var initialisePosts=function initialisePosts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var posts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return postService.getAll();case 2:posts=_context.sent;dispatch(setPosts(posts));console.log(posts);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var createPost=function createPost(obj){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var _msg,newPost,msg,_msg2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!(obj.title===\"\"||obj.creator===\"\"||obj.message===\"\")){_context2.next=5;break;}_msg={message:\"The fields creator, title and message must be provided.\",typeOfMessage:\"warning\"};dispatch(handleNotification(_msg,8000));return _context2.abrupt(\"return\");case 5:_context2.next=7;return postService.create(obj);case 7:newPost=_context2.sent;dispatch(appendPost(newPost));msg={message:\"Your post was successfully created.\",typeOfMessage:\"success\"};dispatch(handleNotification(msg,8000));_context2.next=18;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);_msg2={message:\"Could not create the new post. You can only create a new post if you are signed in.\",typeOfMessage:\"success\"};dispatch(handleNotification(_msg2,8000));console.log(_context2.t0);case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[0,13]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var removePost=function removePost(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var msg,_msg3;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return postService.removeThePost(id);case 3:dispatch(detachPost(id));msg={message:\"Your post was succesfully deleted.\",typeOfMessage:\"success\"};dispatch(handleNotification(msg,8000));_context3.next=13;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);_msg3={message:\"Could not delete the post. You can only delete a post if you are signed in and you were the one who created it.\",typeOfMessage:\"error\"};dispatch(handleNotification(_msg3,8000));console.log(_context3.t0);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var updatePost=function updatePost(id,obj){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){var updatedPost,msg;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return postService.update(id,obj);case 3:updatedPost=_context4.sent;dispatch(updateThePost(updatedPost));_context4.next=12;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);msg={message:\"Couldn't edit the post. You can only perform this action if you are signed in and you were the one who created the post.\",typeOfMessage:\"error\"};dispatch(handleNotification(msg,8000));console.log(_context4.t0);case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var likeAPost=function likeAPost(id,obj){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch){var msg;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return postService.update(id,obj);case 3:dispatch(likeIt(id));_context5.next=11;break;case 6:_context5.prev=6;_context5.t0=_context5[\"catch\"](0);msg={message:\"Couldn't like the post. You can only perform this action if you are signed in and you were the one who created the post.\",typeOfMessage:\"error\"};dispatch(handleNotification(msg,8000));console.log(_context5.t0);case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[0,6]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export default postSlice.reducer;","map":{"version":3,"names":["createSlice","postService","handleNotification","postSlice","name","initialState","reducers","setPosts","state","action","payload","appendPost","push","detachPost","id","filter","post","_id","updateThePost","map","likeIt","postToLike","find","likedPost","likeCount","actions","initialisePosts","dispatch","getAll","posts","console","log","createPost","obj","title","creator","message","msg","typeOfMessage","create","newPost","removePost","removeThePost","updatePost","update","updatedPost","likeAPost","reducer"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/reducers/postReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport postService from \"../services/posts\";\nimport { handleNotification } from \"./notificationReducer\";\n\nconst postSlice = createSlice({\n  name: \"posts\",\n  initialState: [],\n  reducers: {\n    setPosts(state, action) {\n      return action.payload;\n    },\n    appendPost(state, action) {\n      state.push(action.payload);\n    },\n    detachPost(state, action) {\n      const id = action.payload;\n      return state.filter((post) => post._id !== id);\n    },\n    updateThePost(state, action) {\n      return state.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    },\n    likeIt(state, action) {\n      const id = action.payload;\n      const postToLike = state.find((post) => post._id === id);\n      const likedPost = { ...postToLike, likeCount: postToLike.likeCount + 1 };\n      return state.map((post) => (post._id === id ? likedPost : post));\n    },\n  },\n});\n\nexport const { setPosts, appendPost, detachPost, updateThePost, likeIt } =\n  postSlice.actions;\n\nexport const initialisePosts = () => {\n  return async (dispatch) => {\n    const posts = await postService.getAll();\n    dispatch(setPosts(posts));\n    console.log(posts);\n  };\n};\n\nexport const createPost = (obj) => {\n  return async (dispatch) => {\n    try {\n      if (obj.title === \"\" || obj.creator === \"\" || obj.message === \"\") {\n        const msg = {\n          message: \"The fields creator, title and message must be provided.\",\n          typeOfMessage: \"warning\",\n        };\n        dispatch(handleNotification(msg, 8000));\n\n        return;\n      }\n      const newPost = await postService.create(obj);\n      dispatch(appendPost(newPost));\n      const msg = {\n        message: \"Your post was successfully created.\",\n        typeOfMessage: \"success\",\n      };\n      dispatch(handleNotification(msg, 8000));\n    } catch (error) {\n      const msg = {\n        message:\n          \"Could not create the new post. You can only create a new post if you are signed in.\",\n        typeOfMessage: \"success\",\n      };\n      dispatch(handleNotification(msg, 8000));\n      console.log(error);\n    }\n  };\n};\n\nexport const removePost = (id) => {\n  return async (dispatch) => {\n    try {\n      await postService.removeThePost(id);\n      dispatch(detachPost(id));\n      const msg = {\n        message: \"Your post was succesfully deleted.\",\n        typeOfMessage: \"success\",\n      };\n      dispatch(handleNotification(msg, 8000));\n    } catch (error) {\n      const msg = {\n        message:\n          \"Could not delete the post. You can only delete a post if you are signed in and you were the one who created it.\",\n        typeOfMessage: \"error\",\n      };\n      dispatch(handleNotification(msg, 8000));\n      console.log(error);\n    }\n  };\n};\n\nexport const updatePost = (id, obj) => {\n  return async (dispatch) => {\n    try {\n      const updatedPost = await postService.update(id, obj);\n      dispatch(updateThePost(updatedPost));\n    } catch (error) {\n      const msg = {\n        message:\n          \"Couldn't edit the post. You can only perform this action if you are signed in and you were the one who created the post.\",\n        typeOfMessage: \"error\",\n      };\n      dispatch(handleNotification(msg, 8000));\n      console.log(error);\n    }\n  };\n};\n\nexport const likeAPost = (id, obj) => {\n  return async (dispatch) => {\n    try {\n      await postService.update(id, obj);\n      dispatch(likeIt(id));\n    } catch (error) {\n      const msg = {\n        message:\n          \"Couldn't like the post. You can only perform this action if you are signed in and you were the one who created the post.\",\n        typeOfMessage: \"error\",\n      };\n      dispatch(handleNotification(msg, 8000));\n      console.log(error);\n    }\n  };\n};\n\nexport default postSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}