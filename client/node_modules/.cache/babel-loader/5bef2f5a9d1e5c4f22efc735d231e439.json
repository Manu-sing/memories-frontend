{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport posts from \"../services/posts\";\nimport postService from \"../services/posts\";\nconst postSlice = createSlice({\n  name: posts,\n  initialState: [],\n  reducers: {\n    setPosts(state, action) {\n      return action.payload;\n    },\n\n    appendPost(state, action) {\n      state.push(action.payload);\n    }\n\n  }\n});\nexport const {\n  setPosts,\n  appendPost\n} = postSlice.actions;\nexport const initialisePosts = () => {\n  return async dispatch => {\n    const postObjs = await postService.getAll();\n    dispatch(setPosts(postObjs));\n  };\n};\nexport const createPost = obj => {\n  return async dispatch => {\n    try {\n      const newPost = await postService.create(obj);\n      dispatch(appendPost(newPost));\n    } catch (error) {\n      console.log(\"Could not save the new post\");\n    }\n  };\n};\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","posts","postService","postSlice","name","initialState","reducers","setPosts","state","action","payload","appendPost","push","actions","initialisePosts","dispatch","postObjs","getAll","createPost","obj","newPost","create","error","console","log","reducer"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/reducers/postReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport posts from \"../services/posts\";\nimport postService from \"../services/posts\";\n\nconst postSlice = createSlice({\n  name: posts,\n  initialState: [],\n  reducers: {\n    setPosts(state, action) {\n      return action.payload;\n    },\n    appendPost(state, action) {\n      state.push(action.payload);\n    },\n  },\n});\n\nexport const { setPosts, appendPost } = postSlice.actions;\n\nexport const initialisePosts = () => {\n  return async (dispatch) => {\n    const postObjs = await postService.getAll();\n    dispatch(setPosts(postObjs));\n  };\n};\n\nexport const createPost = (obj) => {\n  return async (dispatch) => {\n    try {\n      const newPost = await postService.create(obj);\n      dispatch(appendPost(newPost));\n    } catch (error) {\n      console.log(\"Could not save the new post\");\n    }\n  };\n};\n\nexport default postSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAEH,KADsB;EAE5BI,YAAY,EAAE,EAFc;EAG5BC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtB,OAAOA,MAAM,CAACC,OAAd;IACD,CAHO;;IAIRC,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACxBD,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACC,OAAlB;IACD;;EANO;AAHkB,CAAD,CAA7B;AAaA,OAAO,MAAM;EAAEH,QAAF;EAAYI;AAAZ,IAA2BR,SAAS,CAACU,OAA3C;AAEP,OAAO,MAAMC,eAAe,GAAG,MAAM;EACnC,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACe,MAAZ,EAAvB;IACAF,QAAQ,CAACR,QAAQ,CAACS,QAAD,CAAT,CAAR;EACD,CAHD;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAIC,GAAD,IAAS;EACjC,OAAO,MAAOJ,QAAP,IAAoB;IACzB,IAAI;MACF,MAAMK,OAAO,GAAG,MAAMlB,WAAW,CAACmB,MAAZ,CAAmBF,GAAnB,CAAtB;MACAJ,QAAQ,CAACJ,UAAU,CAACS,OAAD,CAAX,CAAR;IACD,CAHD,CAGE,OAAOE,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,6BAAZ;IACD;EACF,CAPD;AAQD,CATM;AAWP,eAAerB,SAAS,CAACsB,OAAzB"},"metadata":{},"sourceType":"module"}