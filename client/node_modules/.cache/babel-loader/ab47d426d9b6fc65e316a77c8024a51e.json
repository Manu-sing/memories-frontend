{"ast":null,"code":"// import { configureStore } from \"@reduxjs/toolkit\";\n// import postReducer from \"./reducers/postReducer\";\n// import idReducer from \"./reducers/idReducer\";\n// import authReducer from \"./reducers/auth\";\n// const store = configureStore({\n//   reducer: {\n//     posts: postReducer,\n//     currentId: idReducer,\n//     auth: authReducer,\n//   },\n// });\n// export default store;\nimport{configureStore}from\"@reduxjs/toolkit\";import postReducer from\"./reducers/postReducer\";import idReducer from\"./reducers/idReducer\";import authReducer from\"./reducers/auth\";import notificationReducer from\"./reducers/notificationReducer\";import storage from\"redux-persist/lib/storage\";import{combineReducers}from\"redux\";import{persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from\"redux-persist\";var persistConfig={key:\"counter\",storage:storage};var reducers=combineReducers({posts:postReducer,currentId:idReducer,auth:authReducer,notification:notificationReducer});var persistedReducer=persistReducer(persistConfig,reducers);export default configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}});}});","map":{"version":3,"names":["configureStore","postReducer","idReducer","authReducer","notificationReducer","storage","combineReducers","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","reducers","posts","currentId","auth","notification","persistedReducer","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/store.js"],"sourcesContent":["// import { configureStore } from \"@reduxjs/toolkit\";\n// import postReducer from \"./reducers/postReducer\";\n// import idReducer from \"./reducers/idReducer\";\n// import authReducer from \"./reducers/auth\";\n\n// const store = configureStore({\n//   reducer: {\n//     posts: postReducer,\n//     currentId: idReducer,\n//     auth: authReducer,\n//   },\n// });\n\n// export default store;\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport idReducer from \"./reducers/idReducer\";\nimport authReducer from \"./reducers/auth\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"counter\",\n  storage,\n};\n\nconst reducers = combineReducers({\n  posts: postReducer,\n  currentId: idReducer,\n  auth: authReducer,\n  notification: notificationReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport default configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAASA,cAAT,KAA+B,kBAA/B,CACA,MAAOC,YAAP,KAAwB,wBAAxB,CACA,MAAOC,UAAP,KAAsB,sBAAtB,CACA,MAAOC,YAAP,KAAwB,iBAAxB,CACA,MAAOC,oBAAP,KAAgC,gCAAhC,CACA,MAAOC,QAAP,KAAoB,2BAApB,CACA,OAASC,eAAT,KAAgC,OAAhC,CACA,OACEC,cADF,CAEEC,KAFF,CAGEC,SAHF,CAIEC,KAJF,CAKEC,OALF,CAMEC,KANF,CAOEC,QAPF,KAQO,eARP,CAUA,GAAMC,cAAa,CAAG,CACpBC,GAAG,CAAE,SADe,CAEpBV,OAAO,CAAPA,OAFoB,CAAtB,CAKA,GAAMW,SAAQ,CAAGV,eAAe,CAAC,CAC/BW,KAAK,CAAEhB,WADwB,CAE/BiB,SAAS,CAAEhB,SAFoB,CAG/BiB,IAAI,CAAEhB,WAHyB,CAI/BiB,YAAY,CAAEhB,mBAJiB,CAAD,CAAhC,CAOA,GAAMiB,iBAAgB,CAAGd,cAAc,CAACO,aAAD,CAAgBE,QAAhB,CAAvC,CAEA,cAAehB,eAAc,CAAC,CAC5BsB,OAAO,CAAED,gBADmB,CAE5BE,UAAU,CAAE,oBAACC,oBAAD,QACVA,qBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAClB,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADA,CAAD,CADV,EAFgB,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}