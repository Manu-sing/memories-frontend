{"ast":null,"code":"import _asyncToGenerator from\"/Users/emanueleguarnaccia/memories-frontend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/emanueleguarnaccia/memories-frontend/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/emanueleguarnaccia/memories-frontend/client/node_modules/@babel/runtime/regenerator/index.js\";import{createSlice}from\"@reduxjs/toolkit\";import postService from\"../services/posts\";var postSlice=createSlice({name:\"posts\",initialState:[],reducers:{setPosts:function setPosts(state,action){return action.payload;},appendPost:function appendPost(state,action){state.push(action.payload);},detachPost:function detachPost(state,action){var id=action.payload;return state.filter(function(post){return post._id!==id;});},updateThePost:function updateThePost(state,action){return state.map(function(post){return post._id===action.payload._id?action.payload:post;});},likeIt:function likeIt(state,action){var id=action.payload;var postToLike=state.find(function(post){return post._id===id;});var likedPost=_objectSpread(_objectSpread({},postToLike),{},{likeCount:postToLike.likeCount+1});return state.map(function(post){return post._id===id?likedPost:post;});}}});var _postSlice$actions=postSlice.actions,setPosts=_postSlice$actions.setPosts,appendPost=_postSlice$actions.appendPost,detachPost=_postSlice$actions.detachPost,updateThePost=_postSlice$actions.updateThePost,likeIt=_postSlice$actions.likeIt;export{setPosts,appendPost,detachPost,updateThePost,likeIt};export var initialisePosts=function initialisePosts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var posts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return postService.getAll();case 2:posts=_context.sent;dispatch(setPosts(posts));console.log(posts);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var createPost=function createPost(obj){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var newPost;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return postService.create(obj);case 3:newPost=_context2.sent;dispatch(appendPost(newPost));_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.log(\"Could not save the new post\");case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var removePost=function removePost(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return postService.removeBlog(id);case 3:dispatch(detachPost(id));_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.log(\"Could not delete the post\");case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var updatePost=function updatePost(id,obj){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var updatedPost;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return postService.update(id,obj);case 2:updatedPost=_context4.sent;dispatch(updateThePost(updatedPost));case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var likeAPost=function likeAPost(id,obj){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return postService.update(id,obj);case 2:dispatch(likeIt(id));case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export default postSlice.reducer;","map":{"version":3,"names":["createSlice","postService","postSlice","name","initialState","reducers","setPosts","state","action","payload","appendPost","push","detachPost","id","filter","post","_id","updateThePost","map","likeIt","postToLike","find","likedPost","likeCount","actions","initialisePosts","dispatch","getAll","posts","console","log","createPost","obj","create","newPost","removePost","removeBlog","updatePost","update","updatedPost","likeAPost","reducer"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/reducers/postReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport postService from \"../services/posts\";\n\nconst postSlice = createSlice({\n  name: \"posts\",\n  initialState: [],\n  reducers: {\n    setPosts(state, action) {\n      return action.payload;\n    },\n    appendPost(state, action) {\n      state.push(action.payload);\n    },\n    detachPost(state, action) {\n      const id = action.payload;\n      return state.filter((post) => post._id !== id);\n    },\n    updateThePost(state, action) {\n      return state.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    },\n    likeIt(state, action) {\n      const id = action.payload;\n      const postToLike = state.find((post) => post._id === id);\n      const likedPost = { ...postToLike, likeCount: postToLike.likeCount + 1 };\n      return state.map((post) => (post._id === id ? likedPost : post));\n    },\n  },\n});\n\nexport const { setPosts, appendPost, detachPost, updateThePost, likeIt } =\n  postSlice.actions;\n\nexport const initialisePosts = () => {\n  return async (dispatch) => {\n    const posts = await postService.getAll();\n    dispatch(setPosts(posts));\n    console.log(posts);\n  };\n};\n\nexport const createPost = (obj) => {\n  return async (dispatch) => {\n    try {\n      const newPost = await postService.create(obj);\n      dispatch(appendPost(newPost));\n    } catch (error) {\n      console.log(\"Could not save the new post\");\n    }\n  };\n};\n\nexport const removePost = (id) => {\n  return async (dispatch) => {\n    try {\n      await postService.removeBlog(id);\n      dispatch(detachPost(id));\n    } catch (error) {\n      console.log(\"Could not delete the post\");\n    }\n  };\n};\n\nexport const updatePost = (id, obj) => {\n  return async (dispatch) => {\n    const updatedPost = await postService.update(id, obj);\n    dispatch(updateThePost(updatedPost));\n  };\n};\n\nexport const likeAPost = (id, obj) => {\n  return async (dispatch) => {\n    await postService.update(id, obj);\n    dispatch(likeIt(id));\n  };\n};\n\nexport default postSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}