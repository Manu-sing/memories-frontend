{"ast":null,"code":"var _jsxFileName = \"/Users/emanueleguarnaccia/memories-frontend/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useStyles from \"./styles\";\nimport { useState } from \"react\";\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const classes = useStyles();\n  const isSignedUp = true;\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword); // if it doesn't work use this setShowPassword((prevShowPassword) => !prevShowPassword)\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignedUp ? \"Login\" : \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignedUp &&\n          /*#__PURE__*/\n          // usable if you only want to show something in case your statement is true\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), isSignedUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignedUp ? \"Login\" : \"Sing In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"rV/ohgQ9n5J7FMqTwM69O1Oois4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useStyles","useState","Avatar","Button","Paper","Grid","Typography","Container","TextField","LockOutlinedIcon","Input","Auth","showPassword","setShowPassword","classes","isSignedUp","handleSubmit","handleChange","handleShowPassword","paper","avatar","form","submit"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/components/Auth/Auth.js"],"sourcesContent":["import React from \"react\";\nimport useStyles from \"./styles\";\nimport { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n  TextField,\n} from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Input from \"./Input\";\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const classes = useStyles();\n  const isSignedUp = true;\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n    // if it doesn't work use this setShowPassword((prevShowPassword) => !prevShowPassword)\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignedUp ? \"Login\" : \"Sign in\"}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignedUp && ( // usable if you only want to show something in case your statement is true\n              <>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {isSignedUp && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Repeat Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignedUp ? \"Login\" : \"Sing In\"}\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}