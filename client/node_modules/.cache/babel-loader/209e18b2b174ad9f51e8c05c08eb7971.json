{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport posts from \"../services/posts\";\nimport postService from \"../services/posts\";\nconst postSlice = createSlice({\n  name: posts,\n  initialState: [],\n  reducers: {\n    setPosts(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  setPosts\n} = postSlice.actions;\nexport const initialisePosts = () => {\n  return async dispatch => {\n    const posts = await postService.getAll();\n    dispatch(setPosts(posts));\n  };\n};\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","posts","postService","postSlice","name","initialState","reducers","setPosts","state","action","payload","actions","initialisePosts","dispatch","getAll","reducer"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/reducers/postReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport posts from \"../services/posts\";\nimport postService from \"../services/posts\";\n\nconst postSlice = createSlice({\n  name: posts,\n  initialState: [],\n  reducers: {\n    setPosts(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setPosts } = postSlice.actions;\n\nexport const initialisePosts = () => {\n  return async (dispatch) => {\n    const posts = await postService.getAll();\n    dispatch(setPosts(posts));\n  };\n};\n\nexport default postSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAEH,KADsB;EAE5BI,YAAY,EAAE,EAFc;EAG5BC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtB,OAAOA,MAAM,CAACC,OAAd;IACD;;EAHO;AAHkB,CAAD,CAA7B;AAUA,OAAO,MAAM;EAAEH;AAAF,IAAeJ,SAAS,CAACQ,OAA/B;AAEP,OAAO,MAAMC,eAAe,GAAG,MAAM;EACnC,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMZ,KAAK,GAAG,MAAMC,WAAW,CAACY,MAAZ,EAApB;IACAD,QAAQ,CAACN,QAAQ,CAACN,KAAD,CAAT,CAAR;EACD,CAHD;AAID,CALM;AAOP,eAAeE,SAAS,CAACY,OAAzB"},"metadata":{},"sourceType":"module"}