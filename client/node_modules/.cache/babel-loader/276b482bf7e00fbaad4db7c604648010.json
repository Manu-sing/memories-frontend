{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/posts\";\nlet token = null;\n\nconst setToken = newToken => {\n  if (localStorage.getItem(\"profile\")) {\n    token = `bearer ${newToken}`;\n  } else {\n    console.log(\"token is not saved in the local storage\");\n  }\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newObj => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return response.data;\n};\n\nconst removeThePost = async id => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  removeThePost,\n  update,\n  setToken\n};","map":{"version":3,"names":["axios","baseUrl","token","setToken","newToken","localStorage","getItem","console","log","getAll","response","get","data","create","newObj","config","headers","Authorization","post","update","id","newObject","put","removeThePost","delete"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/services/posts.js"],"sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/posts\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  if (localStorage.getItem(\"profile\")) {\n    token = `bearer ${newToken}`;\n  } else {\n    console.log(\"token is not saved in the local storage\");\n  }\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newObj) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return response.data;\n};\n\nconst removeThePost = async (id) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, create, removeThePost, update, setToken };\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;EAC7B,IAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;IACnCJ,KAAK,GAAI,UAASE,QAAS,EAA3B;EACD,CAFD,MAEO;IACLG,OAAO,CAACC,GAAR,CAAY,yCAAZ;EACD;AACF,CAND;;AAQA,MAAMC,MAAM,GAAG,YAAY;EACzB,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUV,OAAV,CAAvB;EACA,OAAOS,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,MAAP,IAAkB;EAC/BP,OAAO,CAACC,GAAR,CAAYN,KAAZ;EACA,MAAMa,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEf;IAAjB;EADI,CAAf;EAGA,MAAMQ,QAAQ,GAAG,MAAMV,KAAK,CAACkB,IAAN,CAAWjB,OAAX,EAAoBa,MAApB,EAA4BC,MAA5B,CAAvB;EACA,OAAOL,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMO,MAAM,GAAG,OAAOC,EAAP,EAAWC,SAAX,KAAyB;EACtCd,OAAO,CAACC,GAAR,CAAYN,KAAZ;EACA,MAAMa,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEf;IAAjB;EADI,CAAf;EAGA,MAAMQ,QAAQ,GAAG,MAAMV,KAAK,CAACsB,GAAN,CAAW,GAAErB,OAAQ,IAAGmB,EAAG,EAA3B,EAA8BC,SAA9B,EAAyCN,MAAzC,CAAvB;EACA,OAAOL,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMW,aAAa,GAAG,MAAOH,EAAP,IAAc;EAClCb,OAAO,CAACC,GAAR,CAAYN,KAAZ;EACA,MAAMa,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEf;IAAjB;EADI,CAAf;EAGA,MAAMQ,QAAQ,GAAG,MAAMV,KAAK,CAACwB,MAAN,CAAc,GAAEvB,OAAQ,IAAGmB,EAAG,EAA9B,EAAiCL,MAAjC,CAAvB;EACA,OAAOL,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,eAAe;EAAEH,MAAF;EAAUI,MAAV;EAAkBU,aAAlB;EAAiCJ,MAAjC;EAAyChB;AAAzC,CAAf"},"metadata":{},"sourceType":"module"}