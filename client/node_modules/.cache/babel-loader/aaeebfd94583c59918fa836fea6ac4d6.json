{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/posts\";\nlet token = `bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`; // const setToken = (newToken) => {\n//   if (localStorage.getItem(\"profile\")) {\n//     token = `bearer ${newToken}`;\n//   } else {\n//     console.log(\"token is not saved in the local storage\");\n//   }\n// };\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newObj => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return response.data;\n};\n\nconst removeThePost = async id => {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  removeThePost,\n  update\n};","map":{"version":3,"names":["axios","baseUrl","token","JSON","parse","localStorage","getItem","getAll","response","get","data","create","newObj","console","log","config","headers","Authorization","post","update","id","newObject","put","removeThePost","delete"],"sources":["/Users/emanueleguarnaccia/memories-frontend/client/src/services/posts.js"],"sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/posts\";\n\nlet token = `bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\n\n// const setToken = (newToken) => {\n//   if (localStorage.getItem(\"profile\")) {\n//     token = `bearer ${newToken}`;\n//   } else {\n//     console.log(\"token is not saved in the local storage\");\n//   }\n// };\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newObj) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObj, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return response.data;\n};\n\nconst removeThePost = async (id) => {\n  console.log(token);\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, create, removeThePost, update };\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAI,UAASC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CJ,KAAM,EAAxE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,MAAM,GAAG,YAAY;EACzB,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUR,OAAV,CAAvB;EACA,OAAOO,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,MAAP,IAAkB;EAC/BC,OAAO,CAACC,GAAR,CAAYZ,KAAZ;EACA,MAAMa,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEf;IAAjB;EADI,CAAf;EAGA,MAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACkB,IAAN,CAAWjB,OAAX,EAAoBW,MAApB,EAA4BG,MAA5B,CAAvB;EACA,OAAOP,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMS,MAAM,GAAG,OAAOC,EAAP,EAAWC,SAAX,KAAyB;EACtCR,OAAO,CAACC,GAAR,CAAYZ,KAAZ;EACA,MAAMa,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEf;IAAjB;EADI,CAAf;EAGA,MAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACsB,GAAN,CAAW,GAAErB,OAAQ,IAAGmB,EAAG,EAA3B,EAA8BC,SAA9B,EAAyCN,MAAzC,CAAvB;EACA,OAAOP,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMa,aAAa,GAAG,MAAOH,EAAP,IAAc;EAClCP,OAAO,CAACC,GAAR,CAAYZ,KAAZ;EACA,MAAMa,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEf;IAAjB;EADI,CAAf;EAGA,MAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACwB,MAAN,CAAc,GAAEvB,OAAQ,IAAGmB,EAAG,EAA9B,EAAiCL,MAAjC,CAAvB;EACA,OAAOP,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,eAAe;EAAEH,MAAF;EAAUI,MAAV;EAAkBY,aAAlB;EAAiCJ;AAAjC,CAAf"},"metadata":{},"sourceType":"module"}